name: publish

on: push

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: build ðŸ“¦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Cargo build
      run: cargo build --release
    - name: Package artifacts
      run: |
        mkdir dist
        tar -czvf dist/${GITHUB_REPOSITORY##*/}-release-x86_64-linux.tar.gz \
            -C target/release \
            arey \
            --owner=0 --group=0
    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: dist/

  release-please:
    runs-on: ubuntu-latest
    steps:
    - uses: googleapis/release-please-action@v4
      id: release
      if: github.ref == 'refs/heads/master'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: rust

  publish-to-crates-io:
    name: publish to crates.io
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, release-please]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rust-src, rustfmt, clippy
    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
      run: cargo publish --token ${{ secrets.CARGO_TOKEN }}

  github-release:
    name: sign release
    needs: [publish-to-crates-io]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-artifacts
        path: dist/
    - name: Sign artifacts
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
    - name: Upload to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release upload \
          '${{ github.ref_name }}' \
          dist/* \
          --repo '${{ github.repository }}'
